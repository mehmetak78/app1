

/*
    height: 95vh;   => 95% of the viewport height
    background-image: linear-gradient(to right bottom, rgba(126,213,111,0.8), rgba(40, 180, 133, 0.8)),url("../img/hero.jpg");
        => we have gradient on the background with opacity 0.8 and below it we have image
    background-size: cover; => try to fit to the viewport
    background-position: top; => top of the image stays always in the top while resizing
    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%); => Draws a polygon where the image will be seen.
            => You can get ready polygons from https://bennettfeely.com/clippy/

*/

.header {
    height: 85vh;
    background-image: linear-gradient(
                    to right bottom,
                    rgba($color-primary-light, 0.8),
                    rgba($color-primary-dark, 0.8)),
    url(../../public/img/hero-small.jpg);
    background-size: cover;
    background-position: top;
    position: relative;


    @supports (clip-path: polygon(0 0)) or (-webkit-clip-path: polygon(0 0)) {
        -webkit-clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
        clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
        height: 95vh;
    }

    @media only screen and (min-resolution: 192dpi) and (min-width: 37.5em),
    only screen and (-webkit-min-device-pixel-ratio: 2) and (min-width: 37.5em),
    only screen and (min-width: 125em) {
        background-image: linear-gradient(
                        to right bottom,
                        rgba($color-primary-light, 0.8),
                        rgba($color-primary-dark, 0.8)),
        url(../../public/img/hero.jpg);
    }


    @include respond(phone) {
        -webkit-clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%);
        clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%);
    }

    /*
        position: absolute;
        top: 40px;
        left: 40px;
        => 40pxs will be relative to the first parent element whose position is relative. So parent element's position (.header) will be "position: relative")
    */
    &__logo-box {
        position: absolute;
        top: 4rem;
        left: 4rem;
    }

    /*
        height: 35px; => height of the image. And the width will autamatically determined by the browser.
    */
    &__logo {
        height: 3.5rem;
    }

    /*
        top: 40%;
        left: 50%; => they are in relation to parent element
        transform: translate(-50%, -50%); => in relation to the element itself.
        text-align: center; => All child text elements will be in the center
    */
    &__text-box {
        position: absolute;
        top: 40%;
        left: 50%;
        transform: translate(-50%, -50%);
        text-align: center;
    }
}
