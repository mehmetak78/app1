.form {
    &__group:not(:last-child) {
        margin-bottom: 2rem;
    }

    /*
        font-family: inherit;
        color: inherit; => inherits the font-family,color manually since input element's does'nt inherit them.
        &::-webkit-input-placeholder => sets the placeholder's color.
     */
    &__input {
        font-size: 1.5rem;
        font-family: inherit;
        color: inherit;
        padding: 1.5rem 2rem;
        border-radius: 2px;
        background-color: rgba($color-white, .5);
        border: none;
        border-bottom: 3px solid transparent;
        width: 90%;
        display: block;
        transition: all .3s;

        @include respond(tab-port) {
            width: 100%;
        }

        &:focus {
            outline: none;
            box-shadow: 0 1rem 2rem rgba($color-black, .1);
            border-bottom: 3px solid $color-primary;
        }

        &:focus:invalid {
            border-bottom: 3px solid $color-secondary-dark;
        }

        &::-webkit-input-placeholder {
            color: $color-grey-dark-2;
        }
    }


    &__label {
        font-size: 1.2rem;
        font-weight: 700;
        margin-left: 2rem;
        margin-top: .7rem;
        display: block;
        transition: all .3s;
    }

    /*
        &__input:placeholder-shown + &__label => Sibling selector. Both label and input are the children of a parent element form-group.
            when the placeholder shonw in input element we can style label like this. "+" selects the next sibling element of input which is label here.
            label must be just after the input in html for using like this.
            if there were other elements between label and input then we should use "~" which is general sibling selector.
        opacity: 0;
        visibility: hidden;  => we use opacity too, not just visibility because we can not animate visibility.
     */
    &__input:placeholder-shown + &__label {
        opacity: 0;
        visibility: hidden;
        transform: translateY(-4rem);
    }


    &__radio-group {
        width: 49%;
        display: inline-block;

        @include respond(tab-port) {
            width: 100%;
            margin-bottom: 2rem;
        }
    }

    &__radio-input {
        display: none;
    }
    
    &__radio-label {
        font-size: $default-font-size;
        cursor: pointer;
        position: relative;
        padding-left: 4.5rem;
    }

    /*
        Since we can not style the radio button of html from css, we use a trick.
        We style the label of radio button in a <span> element and then hide the input of radio.
        Although the radio button is hidden, since it is connected through label, it will be selected when we click the label.
        By doing so, we are creating a new button which we can style by using css as below.
     */
    &__radio-button {
        height: 3rem;
        width: 3rem;
        border: 5px solid $color-primary;
        border-radius: 50%;
        display: inline-block;
        position: absolute;
        left: 0;
        top: -.4rem;

        &::after {
            content: "";
            display: block;
            height: 1.3rem;
            width: 1.3rem;
            border-radius: 50%;
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background-color: $color-primary;
            opacity: 0;
            transition: opacity .2s;
        }
    }

    /*
        General sibling selector. We should also use "+" here, but just for sample we used general sibling selector (~)
        When the radio button is checked, select radio-button::after and sets its opacity to 1.
     */
    &__radio-input:checked ~ &__radio-label &__radio-button::after {
        opacity: 1;
    }
}